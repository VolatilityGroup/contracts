/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VestingVault, VestingVaultInterface } from "../VestingVault";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cliff",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "Issued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "allocationId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "remaining",
        type: "uint256",
      },
    ],
    name: "Released",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "allocationId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "allocationAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "revokedAmount",
        type: "uint256",
      },
    ],
    name: "Revoked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
    ],
    name: "allocationCount",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "allocationSummary",
    outputs: [
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cliff",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "total",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimed",
            type: "uint256",
          },
        ],
        internalType: "struct IVestingVault.Allocation",
        name: "allocation",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "vested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "releasable",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_cliff",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    name: "issue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "pendingAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "revoke",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userAllocations",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cliff",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimed",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6110bf8061007e6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b146101b65780639e3b4272146101d1578063a83e99c3146101fc578063eac449d91461020f578063f2fde38b1461022257600080fd5b806318ace401146100a35780633452153e146100b85780635b1bc79c146100f45780636c19778b1461013e578063715018a6146101ae575b600080fd5b6100b66100b1366004610dd2565b610235565b005b6100e16100c6366004610e5a565b6001600160a01b031660009081526002602052604090205490565b6040519081526020015b60405180910390f35b610107610102366004610e77565b61027a565b604080516001600160a01b0390971687526020870195909552938501929092526060840152608083015260a082015260c0016100eb565b61015161014c366004610e77565b6102d8565b6040805184516001600160a01b03168152602080860151908201528482015191810191909152606080850151908201526080808501519082015260a0938401519381019390935260c083019190915260e0820152610100016100eb565b6100b66103c4565b6000546040516001600160a01b0390911681526020016100eb565b6100e16101df366004610ea3565b600160209081526000928352604080842090915290825290205481565b6100b661020a366004610edc565b61042f565b6100b661021d366004610e77565b610638565b6100b6610230366004610e5a565b610757565b60005b81811015610274576102628484848481811061025657610256610f35565b90506020020135610822565b8061026c81610f61565b915050610238565b50505050565b6002602052816000526040600020818154811061029657600080fd5b60009182526020909120600690910201805460018201546002830154600384015460048501546005909501546001600160a01b03909416965091945092909186565b61031a6040518060c0016040528060006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081525090565b6001600160a01b038316600090815260026020526040812080548291908590811061034757610347610f35565b60009182526020918290206040805160c081018252600690930290910180546001600160a01b03168352600181015493830193909352600283015490820152600382015460608201526004820154608082015260059091015460a082015292506103b0836109e4565b91506103bb83610a5e565b90509250925092565b6000546001600160a01b031633146104235760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b61042d6000610a78565b565b600084116104905760405162461bcd60e51b815260206004820152602860248201527f69737375653a207a65726f2d76616c756520616c6c6f636174696f6e732064696044820152671cd85b1b1bddd95960c21b606482015260840161041a565b6001600160a01b0386166104e65760405162461bcd60e51b815260206004820152601e60248201527f69737375653a207a65726f206164647265737320646973616c6c6f7765640000604482015260640161041a565b808211156105365760405162461bcd60e51b815260206004820152601d60248201527f69737375653a20636c6966662065786365656473206475726174696f6e000000604482015260640161041a565b61054b6001600160a01b038616333087610ac8565b6001600160a01b03868116600081815260026020818152604080842080546001808201835591865283862060069091020180546001600160a01b031916978d169788178155600481018c90558082018b9055600381018990559384018990559484529381528383209483529390935290812080548792906105cd908490610f7c565b9091555050604080516001600160a01b038881168252602082018890529181018690526060810185905260808101849052908816907f0161000024ad4cec6c679d1bbe496068c57f72cbfd78e846fa4b61a392879e069060a00160405180910390a250505050505050565b6001600160a01b038216600090815260026020526040812080548390811061066257610662610f35565b90600052602060002090600602019050600081600401549050600082600501548261068d9190610f94565b6001600160a01b03808716600090815260016020908152604080832088549094168352929052908120805492935083929091906106cb908490610f94565b9091555050600583018290556106fe6106ec6000546001600160a01b031690565b84546001600160a01b03169083610b33565b8254604080516001600160a01b0392831681526020810185905290810183905285918716907fba9bc34cc8b0c50a55ab33fcf7f392a894ca26e0a2bf1390444e5b1f92bbdb3d9060600160405180910390a35050505050565b6000546001600160a01b031633146107b15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161041a565b6001600160a01b0381166108165760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161041a565b61081f81610a78565b50565b6001600160a01b038216600090815260026020526040812080548390811061084c5761084c610f35565b600091825260208083206040805160c081018252600690940290910180546001600160a01b031684526001810154928401929092526002820154908301526003810154606083015260048101546080830152600581015460a083015292506108b390610a5e565b9050600081116108fd5760405162461bcd60e51b815260206004820152601560248201527472656c656173653a206e6f7468696e67206865726560581b604482015260640161041a565b808260050160008282546109119190610f7c565b90915550506001600160a01b03808516600090815260016020908152604080832086549094168352929052908120805483929061094f908490610f94565b9091555050815461096a906001600160a01b03168583610b33565b81546005830154600484015485926001600160a01b03808916937f71ad437492444dfa7eb3962c00a4bc0b092b83de723d8e61f0905549b0da238093929091169186916109b691610f94565b604080516001600160a01b03909416845260208401929092529082015260600160405180910390a350505050565b6000816040015182602001516109fa9190610f7c565b421015610a0957506000919050565b81606001518260200151610a1d9190610f7c565b4210610a2b57506080015190565b60608201516020830151610a3f9042610f94565b8360800151610a4e9190610fab565b610a589190610fca565b92915050565b60008160a00151610a6e836109e4565b610a589190610f94565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b03808516602483015283166044820152606481018290526102749085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610b68565b6040516001600160a01b038316602482015260448101829052610b6390849063a9059cbb60e01b90606401610afc565b505050565b6000610bbd826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610c3a9092919063ffffffff16565b805190915015610b635780806020019051810190610bdb9190610fec565b610b635760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161041a565b6060610c498484600085610c53565b90505b9392505050565b606082471015610cb45760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161041a565b6001600160a01b0385163b610d0b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161041a565b600080866001600160a01b03168587604051610d27919061103a565b60006040518083038185875af1925050503d8060008114610d64576040519150601f19603f3d011682016040523d82523d6000602084013e610d69565b606091505b5091509150610d79828286610d84565b979650505050505050565b60608315610d93575081610c4c565b825115610da35782518084602001fd5b8160405162461bcd60e51b815260040161041a9190611056565b6001600160a01b038116811461081f57600080fd5b600080600060408486031215610de757600080fd5b8335610df281610dbd565b9250602084013567ffffffffffffffff80821115610e0f57600080fd5b818601915086601f830112610e2357600080fd5b813581811115610e3257600080fd5b8760208260051b8501011115610e4757600080fd5b6020830194508093505050509250925092565b600060208284031215610e6c57600080fd5b8135610c4c81610dbd565b60008060408385031215610e8a57600080fd5b8235610e9581610dbd565b946020939093013593505050565b60008060408385031215610eb657600080fd5b8235610ec181610dbd565b91506020830135610ed181610dbd565b809150509250929050565b60008060008060008060c08789031215610ef557600080fd5b8635610f0081610dbd565b95506020870135610f1081610dbd565b95989597505050506040840135936060810135936080820135935060a0909101359150565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415610f7557610f75610f4b565b5060010190565b60008219821115610f8f57610f8f610f4b565b500190565b600082821015610fa657610fa6610f4b565b500390565b6000816000190483118215151615610fc557610fc5610f4b565b500290565b600082610fe757634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610ffe57600080fd5b81518015158114610c4c57600080fd5b60005b83811015611029578181015183820152602001611011565b838111156102745750506000910152565b6000825161104c81846020870161100e565b9190910192915050565b602081526000825180602084015261107581604085016020870161100e565b601f01601f1916919091016040019291505056fea2646970667358221220c15e5dd5ce5800761095dd5d3ed6c965fc542256d08224efe60cf94992c54fe764736f6c63430008090033";

export class VestingVault__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VestingVault> {
    return super.deploy(overrides || {}) as Promise<VestingVault>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): VestingVault {
    return super.attach(address) as VestingVault;
  }
  connect(signer: Signer): VestingVault__factory {
    return super.connect(signer) as VestingVault__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VestingVaultInterface {
    return new utils.Interface(_abi) as VestingVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VestingVault {
    return new Contract(address, _abi, signerOrProvider) as VestingVault;
  }
}
